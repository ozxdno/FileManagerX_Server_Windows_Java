package com.FileManagerX.Interfaces;

public interface ICollection<T, K> extends IPublic {

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public IIterator<T> getIterator();
	public K getKey(T e);
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public int size();
	public void clear();
	public boolean add(T item);
	public boolean sort(java.util.Comparator<T> c);
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public T searchByCount(int count);
	public T fetchByCount(int count);
	public ICollection<T,K> searchesByCount(int bg, int ed);
	public ICollection<T,K> fetchesByCount(int bg, int ed);
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public T searchByKey(K key);
	public T fetchByKey(K key);
	public ICollection<T,K> searchesByKey(K key);
	public ICollection<T,K> fetchesByKey(K key);
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
