package com.FileManagerX.Interfaces;

public interface ICollection<T> extends IPublic {

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public boolean setContent(ICollection<T> content);
	public boolean setKey(IKey key);
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	public IIterator<T> getIterator();
	public Object getKey(T e);
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public T createT();
	public int size();
	public void clear();
	public boolean add(T item);
	public boolean sort(java.util.Comparator<T> c);
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public T searchByCount(int count);
	public T fetchByCount(int count);
	public ICollection<T> searchesByCount(int bg, int ed);
	public ICollection<T> fetchesByCount(int bg, int ed);
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public T searchByKey(Object key);
	public T fetchByKey(Object key);
	public ICollection<T> searchesByKey(Object key);
	public ICollection<T> fetchesByKey(Object key);

	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public static interface IKey {
		public Object getKey(Object item);
	}
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	public static IKey defaultKey() {
		return new IKey() {
			public Object getKey(Object item) {
				return com.FileManagerX.Tools.Time.getTicks();
			}
		};
	}
	
	///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
